{
  "address": "0x12bADdDCBA4144b74D4b9d62F80479D29d70c569",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bond",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        }
      ],
      "name": "BondCreation",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bondDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "_payoutToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_principleToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasuryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bondAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "indexOfBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_payoutToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_principleToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_customTreasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_customBond",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tierCeilings",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_fees",
          "type": "uint256[]"
        }
      ],
      "name": "pushBond",
      "outputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bond",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "romeProFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactoryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferManagment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x080a5366e0a046b58c787c85538aa065e288a51de067bfbce5c42523f9be5cd0",
  "receipt": {
    "to": null,
    "from": "0x7c21291D033E88bd6A22bA8f3D0716bDD47C9F2e",
    "contractAddress": "0x12bADdDCBA4144b74D4b9d62F80479D29d70c569",
    "transactionIndex": 10,
    "gasUsed": "585290",
    "logsBloom": "0x
    "blockHash": "0xffb23e0b0c8087e289e9d4f1ed2baee4a8846e68bbf258871ade84cefcc45b90",
    "transactionHash": "0x080a5366e0a046b58c787c85538aa065e288a51de067bfbce5c42523f9be5cd0",
    "logs": [],
    "blockNumber": 1344230,
    "cumulativeGasUsed": "2019095",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "967cea600f64445b80998c062f54e515",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bond\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"name\":\"BondCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bondDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_payoutToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_principleToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bondAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payoutToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_principleToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_customTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_customBond\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tierCeilings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_fees\",\"type\":\"uint256[]\"}],\"name\":\"pushBond\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bond\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"romeProFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferManagment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pushBond(address,address,address,address,address,uint256[],uint256[])\":{\"params\":{\"_customBond\":\"address\",\"_customTreasury\":\"address\",\"_fees\":\"uint[]\",\"_initialOwner\":\"address\",\"_payoutToken\":\"address\",\"_principleToken\":\"address\",\"_tierCeilings\":\"uint[]\"},\"returns\":{\"_bond\":\"address\",\"_treasury\":\"address\"}},\"setFactoryAddress(address)\":{\"params\":{\"_factory\":\"address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pushBond(address,address,address,address,address,uint256[],uint256[])\":{\"notice\":\"pushes bond details to array\"},\"setFactoryAddress(address)\":{\"notice\":\"changes rome pro factory address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/factoryStorage.sol\":\"RomeProFactoryStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"src/contracts/factoryStorage.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2021-09-23\\n*/\\n\\n// File contracts/types/Ownable.sol\\n\\npragma solidity 0.7.5;\\n\\ncontract Ownable {\\n\\n    address public policy;\\n\\n    constructor () {\\n        policy = msg.sender;\\n    }\\n\\n    modifier onlyPolicy() {\\n        require( policy == msg.sender, \\\"Ownable: caller is not the owner\\\" );\\n        _;\\n    }\\n    \\n    function transferManagment(address _newOwner) external onlyPolicy() {\\n        require( _newOwner != address(0) );\\n        policy = _newOwner;\\n    }\\n}\\n\\n\\n// File contracts/RomeProFactoryStorage.sol\\n\\n// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.7.5;\\n\\ncontract RomeProFactoryStorage is Ownable {\\n    \\n    /* ======== STRUCTS ======== */\\n\\n    struct BondDetails {\\n        address _payoutToken;\\n        address _principleToken;\\n        address _treasuryAddress;\\n        address _bondAddress;\\n        address _initialOwner;\\n        uint[] _tierCeilings;\\n        uint[] _fees;\\n    }\\n    \\n    /* ======== STATE VARIABLS ======== */\\n    BondDetails[] public bondDetails;\\n\\n    address public romeProFactory;\\n\\n    mapping(address => uint) public indexOfBond;\\n\\n    /* ======== EVENTS ======== */\\n\\n    event BondCreation(address treasury, address bond, address _initialOwner);\\n    \\n    /* ======== POLICY FUNCTIONS ======== */\\n    \\n    /**\\n        @notice pushes bond details to array\\n        @param _payoutToken address\\n        @param _principleToken address\\n        @param _customTreasury address\\n        @param _customBond address\\n        @param _initialOwner address\\n        @param _tierCeilings uint[]\\n        @param _fees uint[]\\n        @return _treasury address\\n        @return _bond address\\n     */\\n    function pushBond(address _payoutToken, address _principleToken, address _customTreasury, address _customBond, address _initialOwner, uint[] calldata _tierCeilings, uint[] calldata _fees) external returns(address _treasury, address _bond) {\\n        require(romeProFactory == msg.sender, \\\"Not Rome Pro Factory\\\");\\n\\n        indexOfBond[_customBond] = bondDetails.length;\\n        \\n        bondDetails.push( BondDetails({\\n            _payoutToken: _payoutToken,\\n            _principleToken: _principleToken,\\n            _treasuryAddress: _customTreasury,\\n            _bondAddress: _customBond,\\n            _initialOwner: _initialOwner,\\n            _tierCeilings: _tierCeilings,\\n            _fees: _fees\\n        }));\\n\\n        emit BondCreation(_customTreasury, _customBond, _initialOwner);\\n        return( _customTreasury, _customBond );\\n    }\\n\\n    /**\\n        @notice changes rome pro factory address\\n        @param _factory address\\n     */\\n    function setFactoryAddress(address _factory) external onlyPolicy() {\\n        romeProFactory = _factory;\\n    }\\n    \\n}\",\"keccak256\":\"0xfa62bb225a3669c3e47a81676e13d99ce1a87723d2f8d05c154b6b50f2b10ad9\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610946806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633bfdd7de1161005b5780633bfdd7de1461020457806383c17c5514610239578063b1770b371461026c578063d8b256b4146102d25761007d565b80630505c8c9146100825780630e8dbe24146100b3578063240337c2146101fc575b600080fd5b61008a610317565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101b3600480360360e08110156100c957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101358216926040820135831692606083013581169260808101359091169181019060c0810160a082013564010000000081111561012257600080fd5b82018360208201111561013457600080fd5b8035906020019184602083028401116401000000008311171561015657600080fd5b91939092909160208101903564010000000081111561017457600080fd5b82018360208201111561018657600080fd5b803590602001918460208302840111640100000000831117156101a857600080fd5b509092509050610333565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61008a610667565b6102376004803603602081101561021a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610683565b005b6102376004803603602081101561024f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610770565b6102896004803603602081101561028257600080fd5b503561083d565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681529486166020860152928516848401529084166060840152909216608082015290519081900360a00190f35b610305600480360360208110156102e857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661089e565b60408051918252519081900360200190f35b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600254600090819073ffffffffffffffffffffffffffffffffffffffff1633146103be57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420526f6d652050726f20466163746f7279000000000000000000000000604482015290519081900360640190fd5b600180549050600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016040518060e001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff16815260200188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060408051602088810282810182019093528882529283019290918991899182918501908490808284376000920182905250939094525050835460018082018655948252602091829020845160079092020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161782558584015196820180548216978416979097179096556040850151600282018054881691841691909117905560608501516003820180548816918416919091179055608085015160048201805490971692169190911790945560a083015180519394936105de9350600585019291909101906108b0565b5060c082015180516105fa9160068401916020909101906108b0565b50506040805173ffffffffffffffffffffffffffffffffffffffff808d168252808c1660208301528a168183015290517f34c882c38c88d2da38fac8717334976b41c856bc28585db7383e4835d2cc73cf92509081900360600190a1509699959850949650505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461070957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811661072957600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107f657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001818154811061084d57600080fd5b60009182526020909120600790910201805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff93841695509183169390831692908116911685565b60036020526000908152604090205481565b8280548282559060005260206000209081019282156108eb579160200282015b828111156108eb5782518255916020019190600101906108d0565b506108f79291506108fb565b5090565b5b808211156108f757600081556001016108fc56fea2646970667358221220d7a761dffc72bf2c342c80ae11e20215cda930325166a318cc962e75708d4d9264736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80633bfdd7de1161005b5780633bfdd7de1461020457806383c17c5514610239578063b1770b371461026c578063d8b256b4146102d25761007d565b80630505c8c9146100825780630e8dbe24146100b3578063240337c2146101fc575b600080fd5b61008a610317565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101b3600480360360e08110156100c957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101358216926040820135831692606083013581169260808101359091169181019060c0810160a082013564010000000081111561012257600080fd5b82018360208201111561013457600080fd5b8035906020019184602083028401116401000000008311171561015657600080fd5b91939092909160208101903564010000000081111561017457600080fd5b82018360208201111561018657600080fd5b803590602001918460208302840111640100000000831117156101a857600080fd5b509092509050610333565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61008a610667565b6102376004803603602081101561021a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610683565b005b6102376004803603602081101561024f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610770565b6102896004803603602081101561028257600080fd5b503561083d565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681529486166020860152928516848401529084166060840152909216608082015290519081900360a00190f35b610305600480360360208110156102e857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661089e565b60408051918252519081900360200190f35b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600254600090819073ffffffffffffffffffffffffffffffffffffffff1633146103be57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420526f6d652050726f20466163746f7279000000000000000000000000604482015290519081900360640190fd5b600180549050600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016040518060e001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff16815260200188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060408051602088810282810182019093528882529283019290918991899182918501908490808284376000920182905250939094525050835460018082018655948252602091829020845160079092020180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161782558584015196820180548216978416979097179096556040850151600282018054881691841691909117905560608501516003820180548816918416919091179055608085015160048201805490971692169190911790945560a083015180519394936105de9350600585019291909101906108b0565b5060c082015180516105fa9160068401916020909101906108b0565b50506040805173ffffffffffffffffffffffffffffffffffffffff808d168252808c1660208301528a168183015290517f34c882c38c88d2da38fac8717334976b41c856bc28585db7383e4835d2cc73cf92509081900360600190a1509699959850949650505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461070957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811661072957600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107f657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6001818154811061084d57600080fd5b60009182526020909120600790910201805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff93841695509183169390831692908116911685565b60036020526000908152604090205481565b8280548282559060005260206000209081019282156108eb579160200282015b828111156108eb5782518255916020019190600101906108d0565b506108f79291506108fb565b5090565b5b808211156108f757600081556001016108fc56fea2646970667358221220d7a761dffc72bf2c342c80ae11e20215cda930325166a318cc962e75708d4d9264736f6c63430007050033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "pushBond(address,address,address,address,address,uint256[],uint256[])": {
        "params": {
          "_customBond": "address",
          "_customTreasury": "address",
          "_fees": "uint[]",
          "_initialOwner": "address",
          "_payoutToken": "address",
          "_principleToken": "address",
          "_tierCeilings": "uint[]"
        },
        "returns": {
          "_bond": "address",
          "_treasury": "address"
        }
      },
      "setFactoryAddress(address)": {
        "params": {
          "_factory": "address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "pushBond(address,address,address,address,address,uint256[],uint256[])": {
        "notice": "pushes bond details to array"
      },
      "setFactoryAddress(address)": {
        "notice": "changes rome pro factory address"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
        "label": "policy",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 69,
        "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
        "label": "bondDetails",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(BondDetails)66_storage)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
        "label": "romeProFactory",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 75,
        "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
        "label": "indexOfBond",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(BondDetails)66_storage)dyn_storage": {
        "base": "t_struct(BondDetails)66_storage",
        "encoding": "dynamic_array",
        "label": "struct RomeProFactoryStorage.BondDetails[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(BondDetails)66_storage": {
        "encoding": "inplace",
        "label": "struct RomeProFactoryStorage.BondDetails",
        "members": [
          {
            "astId": 51,
            "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
            "label": "_payoutToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 53,
            "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
            "label": "_principleToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 55,
            "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
            "label": "_treasuryAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 57,
            "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
            "label": "_bondAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 59,
            "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
            "label": "_initialOwner",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 62,
            "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
            "label": "_tierCeilings",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 65,
            "contract": "src/contracts/factoryStorage.sol:RomeProFactoryStorage",
            "label": "_fees",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}